{"version":3,"sources":["components/StaticContent.jsx","components/ContactIcon.jsx","components/FormValidator.js","components/withForm.jsx","components/Button.jsx","components/Contact/Form/index.jsx","components/Contact/index.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Data__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","withData","_ref","data","image","title","children","backgroundImage","getImage","style","concat","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","width","paddingTop","a","createElement","className","sm","backgroundColor","Heading","Title","componentClass","Body","icons","phone","faPhone","email","faEnvelope","facebook","faFacebookF","youtube","faYoutube","twitter","faTwitter","instagram","faInstagram","ContactIcon","_ref$icon","icon","name","link","text","size","react_default","href","rel","index_es","FormValidator","validations","Object","classCallCheck","this","state","validation","valid","forEach","rule","field","isInvalid","field_value","toString","args","method","validator","apply","toConsumableArray","validWhen","isValid","map","objectSpread","withForm","propState","rules","Component","_React$Component","WithForm","props","_this","possibleConstructorReturn","getPrototypeOf","call","FieldGroup","id","label","validationState","objectWithoutProperties","FormGroup","controlId","ControlLabel","FormControl","Feedback","onChange","e","target","value","setState","defineProperty","onValidate","validate","onSubmit","_","show","isValidate","keys","every","inherits","createClass","key","Fragment","assign","getValidationState","Modal","display","alignItems","onHide","Header","closeButton","padding","Alert","position","margin","bsStyle","Footer","Button","onClick","React","components_Button","esm_extends","formFields","type","message","min","max","preventDefault","document","getElementById","reset","i","placeholder","string","charAt","toUpperCase","slice","disabled","Icon","arguments","length","undefined","links","mapStyle","maxWidth","height","marginLeft","marginRight","coordinate","lat","lng","MapContainer","google","dist","zoom","initialCenter","GoogleApiWrapper","apiKey","_ref2","StaticContent","Contact_Form","components_ContactIcon","Contact_MapContainer"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KA0CeQ,gBAtCO,SAAAC,GAKhB,IAJJC,EAIID,EAJJC,KACAC,EAGIF,EAHJE,MACAC,EAEIH,EAFJG,MACAC,EACIJ,EADJI,SAEMC,EAAkBJ,EAAKK,SAASJ,GAChCK,EAAQ,CACZF,gBAAe,OAAAG,OAASH,EAAT,KACfI,eAAgB,QAChBC,mBAAoB,SACpBC,iBAAkB,YAClBC,UAAW,QACXC,MAAO,OACPC,WAAY,QAEd,OACEtB,EAAAuB,EAAAC,cAAA,OAAKT,MAAOA,EAAOU,UAAU,kBAC3BzB,EAAAuB,EAAAC,cAACrB,EAAA,EAAD,KACEH,EAAAuB,EAAAC,cAACpB,EAAA,EAAD,KACEJ,EAAAuB,EAAAC,cAACnB,EAAA,EAAD,CAAKqB,GAAI,IACP1B,EAAAuB,EAAAC,cAAClB,EAAA,EAAD,CAAOS,MAAO,CAACY,gBAAiB,sBAC9B3B,EAAAuB,EAAAC,cAAClB,EAAA,EAAMsB,QAAP,KACE5B,EAAAuB,EAAAC,cAAClB,EAAA,EAAMuB,MAAP,CAAaC,eAAe,MACzBnB,IAGLX,EAAAuB,EAAAC,cAAClB,EAAA,EAAMyB,KAAP,KACGnB,4HCtBXoB,EAAQ,CACZC,MAAOC,IACPC,MAAOC,IACPC,SAAUC,IACVC,QAASC,IACTC,QAASC,IACTC,UAAWC,KAUEC,EANK,SAAArC,GAAA,IAAAsC,EAAAtC,EAAGuC,KAAQC,EAAXF,EAAWE,KAAYC,GAAvBH,EAAiBI,KAAjBJ,EAAuBG,MAAME,EAA7BL,EAA6BK,KAA7B,OAClBC,EAAA7B,EAAAC,cAAA,KAAG6B,KAAMJ,EAAMK,IAAI,uBACjBF,EAAA7B,EAAAC,cAAC+B,EAAA,EAAD,CAAiBR,KAAMf,EAAMgB,GAAOG,KAAMA,gJC8B/BK,aAjDb,SAAAA,EAAYC,GAAcC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAExBI,KAAKH,YAAcA,uDAGZI,GAEP,IAAIC,EAAaF,KAAKG,QA4BtB,OAzBAH,KAAKH,YAAYO,QAAQ,SAAAC,GAGvB,IAAKH,EAAWG,EAAKC,OAAOC,UAAW,CAGrC,IAAMC,EAAcP,EAAMI,EAAKC,OAAOG,WAChCC,EAAOL,EAAKK,MAAQ,IAEG,kBAAhBL,EAAKM,OACZC,IAAUP,EAAKM,QACfN,EAAKM,QAOSE,WAAjB,GAAkBL,GAAlBpD,OAAA0C,OAAAgB,EAAA,EAAAhB,CAAkCY,GAAlC,CAAwCT,OAAWI,EAAKU,YACzDb,EAAWG,EAAKC,OAAS,CAAEC,WAAW,GACtCL,EAAWc,SAAU,MAKpBd,kCAIP,IAAMA,EAAa,GAMnB,OAJAF,KAAKH,YAAYoB,IAAI,SAAAZ,GAAI,OACvBH,EAAWG,EAAKC,OAAS,CAAEC,WAAW,KAGjCT,OAAAoB,EAAA,EAAApB,CAAA,CAAEkB,SAAS,GAASd,YCkDhBiB,EAvFE,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAAI,SAAAC,GAoFrC,OApFkD,SAAAC,GAEhD,SAAAC,EAAYC,GAAO,IAAAC,EAAA,OAAA5B,OAAAC,EAAA,EAAAD,CAAAE,KAAAwB,IACjBE,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAAE,KAAAF,OAAA8B,EAAA,EAAA9B,CAAA0B,GAAAK,KAAA7B,KAAMyB,KAURK,WAAa,SAAAlF,GAAA,IAAGmF,EAAHnF,EAAGmF,GAAIC,EAAPpF,EAAOoF,MAAOC,EAAdrF,EAAcqF,gBAAoBR,EAAlC3B,OAAAoC,EAAA,EAAApC,CAAAlD,EAAA,yCACX4C,EAAA7B,EAAAC,cAACuE,EAAA,EAAD,CAAWF,gBAAiBA,EAAiBG,UAAWL,GACtDvC,EAAA7B,EAAAC,cAACyE,EAAA,EAAD,KAAeL,GACfxC,EAAA7B,EAAAC,cAAC0E,EAAA,EAAgBb,GACjBjC,EAAA7B,EAAAC,cAAC0E,EAAA,EAAYC,SAAb,QAfeb,EAmBnBc,SAAW,SAAAC,GACT,IAAIrD,EAAOqD,EAAEC,OAAOtD,KAChBuD,EAAQF,EAAEC,OAAOC,MACrBjB,EAAKkB,SAAS,SAAA3C,GAAK,OAAAH,OAAA+C,EAAA,EAAA/C,CAAA,GAChBV,EAAOuD,MAvBOjB,EA2BnBoB,WAAa,SAAAL,GACX,GAAsB,KAAlBf,EAAKzB,MAAMwC,GAEb,OADmBf,EAAKd,UAAUmC,SAASrB,EAAKzB,OAC9BwC,GAAGlC,UAAY,QAAU,WA9B5BmB,EAkCnBsB,SAAW,SAAAC,GAAC,OACVvB,EAAKkB,SAAS,SAAA3C,GAAK,OAAAH,OAAAoB,EAAA,EAAApB,CAAA,GAAUsB,EAAV,CAAqB8B,MAAOjD,EAAMiD,UAnCpCxB,EAqCnByB,WAAa,SAAAF,GAAC,OACZnD,OAAOsD,KAAKhC,GAAWiC,MACrB,SAAAV,GAAK,MAA+B,YAA3BjB,EAAKoB,WAAWH,MAlC3BjB,EAAKzB,MAALH,OAAAoB,EAAA,EAAApB,CAAA,GAAkBsB,EAAlB,CAA6B8B,MAAM,IAGnCxB,EAAKd,UAAY,IAAIhB,EAAcyB,GARlBK,EAF6B,OAAA5B,OAAAwD,EAAA,EAAAxD,CAAA0B,EAAAD,GAAAzB,OAAAyD,EAAA,EAAAzD,CAAA0B,EAAA,EAAAgC,IAAA,SAAAb,MAAA,WA6C9C,OACEnD,EAAA7B,EAAAC,cAAA4B,EAAA7B,EAAA8F,SAAA,KACEjE,EAAA7B,EAAAC,cAAC0D,EAADxB,OAAA4D,OAAA,GACM1D,KAAKC,MACLD,KAAKyB,MAFX,CAGEK,WAAY9B,KAAK8B,WACjBU,SAAUxC,KAAKwC,SACfQ,SAAUhD,KAAKgD,SACfW,mBAAoB3D,KAAK8C,WACzBK,WAAYnD,KAAKmD,cAEnB3D,EAAA7B,EAAAC,cAACgG,EAAA,EAAD,CACEzG,MAAO,CACL0G,QAAS,OACTC,WAAY,UAEdZ,KAAMlD,KAAKC,MAAMiD,KACjBa,OAAQ/D,KAAKgD,UACbxD,EAAA7B,EAAAC,cAACgG,EAAA,EAAMI,OAAP,CAAcC,aAAW,IACzBzE,EAAA7B,EAAAC,cAACgG,EAAA,EAAMzF,KAAP,CAAYhB,MAAO,CAAE+G,QAAS,MAC5B1E,EAAA7B,EAAAC,cAACuG,EAAA,EAAD,CACEhH,MAAO,CACLiH,SAAU,SACVC,OAAQ,KAEVC,QAAQ,WALV,+BAM8B9E,EAAA7B,EAAAC,cAAA,8BAGhC4B,EAAA7B,EAAAC,cAACgG,EAAA,EAAMW,OAAP,KACE/E,EAAA7B,EAAAC,cAAC4G,EAAA,EAAD,CAAQF,QAAQ,UAAUG,QAASzE,KAAKgD,UACtCxD,EAAA7B,EAAAC,cAAA,4BA5EoC4D,EAAA,CAC3BkD,IAAMpD,sBCThBqD,EAAA,SAAA/H,GAAA,IAAK6E,EAAL3B,OAAA8E,EAAA,EAAA9E,CAAA,GAAAlD,GAAA,OACb4C,EAAA7B,EAAAC,cAAC4G,EAAA,EAAW/C,EACTA,EAAMzE,WCDL6H,EAAa,CACjB,CACE9C,GAAI,OACJ+C,KAAM,QAER,CACE/C,GAAI,QACJ+C,KAAM,SAER,CACE/C,GAAI,UACJ+C,KAAM,OACN5G,eAAgB,aAuELiD,IAzCD,CACZ/B,KAAM,GACNb,MAAO,GACPwG,QAAS,IAsCI5D,CAnEO,CACpB,CACEb,MAAO,OACPK,OAAQ,UACRD,KAAM,CAAC,SACPK,WAAW,GAEb,CACET,MAAO,OACPK,OAAQ,eACRD,KAAM,CAAC,CAACsE,IAAK,EAAGC,IAAK,KACrBlE,WAAW,GAEb,CACET,MAAO,QACPK,OAAQ,UACRI,WAAW,GAEb,CACET,MAAO,UACPK,OAAQ,eACRD,KAAM,CAAC,CAACsE,IAAK,EAAGC,IAAK,MACrBlE,WAAW,IA6CAI,CAjCF,SAAAvE,GAKP,IAJJkF,EAIIlF,EAJJkF,WACAU,EAGI5F,EAHJ4F,SACAmB,EAEI/G,EAFJ+G,mBACGlC,EACC3B,OAAAoC,EAAA,EAAApC,CAAAlD,EAAA,gDAMEoE,EAAUS,EAAM0B,aACtB,OACE3D,EAAA7B,EAAAC,cAAA,QAAMmE,GAAG,eAAeS,SAAUA,EAAUQ,SAP7B,SAAAP,GACfA,EAAEyC,iBACFC,SAASC,eAAe,gBAAgBC,QACxC5D,EAAMuB,aAMF6B,EAAW5D,IAAI,SAACX,EAAOgF,GAAR,OACb9F,EAAA7B,EAAAC,cAACkE,EAAD,CACE0B,IAAO8B,EACPvD,GAAIzB,EAAMyB,GACV+C,KAAMxE,EAAMwE,KACZ1F,KAAMkB,EAAMyB,GACZ7D,eAAgBoC,EAAMpC,eACtBqH,aAxBUC,EAwBiBlF,EAAMyB,GAxBbyD,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,IAyBlE1D,gBAAiB0B,EAAmBrD,EAAMyB,MAzBhC,IAAAyD,IA6BhBhG,EAAA7B,EAAAC,cAAC+G,EAAD,CAAQiB,UAAW5E,EAAS8D,KAAK,UAAjC,QACAtF,EAAA7B,EAAAC,cAAC+G,EAAD,CAAQG,KAAK,SAAb,YC5EAe,EACJ,SAAAA,EAAYzG,EAAME,EAAMD,GAAmB,IAAbE,EAAauG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAAMhG,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,GACzC7F,KAAKZ,KAAOA,EACZY,KAAKV,KAAOA,EACZU,KAAKX,KAAOA,EACZW,KAAKT,KAAOA,GAIV0G,EAAQ,CACZ,IAAIJ,EAAK,QAAS,sBAAuB,+BACzC,IAAIA,EAAK,WAAY,gBAAiB,6BACtC,IAAIA,EAAK,UAAW,kBAAmB,4BACvC,IAAIA,EAAK,UAAW,eAAgB,wBACpC,IAAIA,EAAK,YAAa,iBAAkB,+BAGpCK,EAAW,CACfC,SAAU,OACVC,OAAQ,QACRhC,SAAU,WACViC,WAAY,OACZC,YAAa,QAGTC,EAAa,CACjBC,KAAM,OACNC,IAAK,SAGDC,EAAe,SAAA9J,GAAA,IAAG+J,EAAH/J,EAAG+J,OAAH,OACnBnH,EAAA7B,EAAAC,cAAA,OAAKmE,GAAG,MAAM5E,MAAO+I,GACnB1G,EAAA7B,EAAAC,cAACgJ,EAAA,IAAD,CAAKD,OAAQA,EAAQE,KAAM,GAAIC,cAAeP,MAyBnCQ,qCAAiB,CAC9BC,OAAQ,2CADKD,CArBC,SAAAE,GAAA,IAAGN,EAAHM,EAAGN,OAAH,OACdnH,EAAA7B,EAAAC,cAACsJ,EAAA,EAAD,CAAepK,MAAO,EAAGC,MAAM,gBAC7ByC,EAAA7B,EAAAC,cAAA,OAAKC,UAAU,gBACb2B,EAAA7B,EAAAC,cAACuJ,EAAD,MACA3H,EAAA7B,EAAAC,cAAA,OAAKC,UAAU,kBACZoI,EAAMhF,IAAI,SAAC9B,EAAMmG,GAAP,OACT9F,EAAA7B,EAAAC,cAACwJ,EAAD,CAAa5D,IAAK8B,EAAGnG,KAAMA,OAG/BK,EAAA7B,EAAAC,cAACyJ,EAAD,CAAcV,OAAQA,IACtBnH,EAAA7B,EAAAC,cAAA,SACE4B,EAAA7B,EAAAC,cAACwJ,EAAD,CAAajI,KAAM,IAAI0G,EAAK,WAD9B,aAIArG,EAAA7B,EAAAC,cAAA,0BACA4B,EAAA7B,EAAAC,cAAA,0BACA4B,EAAA7B,EAAAC,cAAA","file":"static/js/7.0bde0722.chunk.js","sourcesContent":["import React from 'react';\r\nimport {withData} from '../Data';\r\nimport {Grid, Row, Col, Panel} from 'react-bootstrap';\r\n\r\nconst StaticContent = ({\r\n  data,\r\n  image,\r\n  title,\r\n  children\r\n}) => {\r\n  const backgroundImage = data.getImage(image);\r\n  const style = {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    minHeight: '100vh',\r\n    width: '100%',\r\n    paddingTop: '5rem'\r\n  }\r\n  return (\r\n    <div style={style} className=\"static-content\">\r\n      <Grid>\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Panel style={{backgroundColor: 'rgba(0, 0, 0, .7)'}}>\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h2\">\r\n                  {title}\r\n                </Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                {children}\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withData(StaticContent);\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faFacebookF,\r\n  faYoutube,\r\n  faTwitter,\r\n  faInstagram\r\n} from '@fortawesome/free-brands-svg-icons'\r\nimport { faEnvelope, faPhone } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst icons = {\r\n  phone: faPhone,\r\n  email: faEnvelope,\r\n  facebook: faFacebookF,\r\n  youtube: faYoutube,\r\n  twitter: faTwitter,\r\n  instagram: faInstagram\r\n}\r\n\r\n// Icon Element\r\nconst ContactIcon = ({ icon: { name, text, link, size } }) => (\r\n  <a href={link} rel=\"noopener noreferrer\">\r\n    <FontAwesomeIcon icon={icons[name]} size={size} />\r\n  </a>\r\n)\r\n\r\nexport default ContactIcon\r\n","import validator from 'validator';\r\n\r\nclass FormValidator {\r\n  constructor(validations) {\r\n    // validations is an array of validation rules specific to a form\r\n    this.validations = validations;\r\n  }\r\n\r\n  validate(state) {\r\n    // start out assuming valid\r\n    let validation = this.valid();\r\n\r\n    // for each validation rule\r\n    this.validations.forEach(rule => {\r\n\r\n      // if the field hasn't already been marked invalid by an earlier rule\r\n      if (!validation[rule.field].isInvalid) {\r\n        // determine the field value, the method to invoke and optional args from\r\n        // the rule definition\r\n        const field_value = state[rule.field].toString();\r\n        const args = rule.args || [];\r\n        const validation_method =\r\n              typeof rule.method === 'string' ?\r\n              validator[rule.method] :\r\n              rule.method\r\n\r\n        // call the validation_method with the current field value as the first\r\n        // argument, any additional arguments, and the whole state as a final\r\n        // argument.  If the result doesn't match the rule.validWhen property,\r\n        // then modify the validation object for the field and set the isValid\r\n        // field to false\r\n        if(validation_method(field_value, ...args, state) !== rule.validWhen) {\r\n          validation[rule.field] = { isInvalid: true }\r\n          validation.isValid = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    return validation;\r\n  }\r\n\r\n  valid() {\r\n    const validation = {}\r\n\r\n    this.validations.map(rule => (\r\n      validation[rule.field] = { isInvalid: false }\r\n    ));\r\n\r\n    return { isValid: true, ...validation };\r\n  }\r\n}\r\n\r\nexport default FormValidator;\r\n","import React from 'react'\r\nimport {\r\n  Alert,\r\n  Button,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Modal\r\n} from 'react-bootstrap'\r\nimport FormValidator from './FormValidator'\r\n\r\nconst withForm = propState => rules => Component => {\r\n  class WithForm extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      // Child component creates\r\n      // The initial tate\r\n      this.state = { ...propState, show: false }\r\n\r\n      // Input Validations\r\n      this.validator = new FormValidator(rules)\r\n    }\r\n\r\n    FieldGroup = ({ id, label, validationState, ...props }) => (\r\n      <FormGroup validationState={validationState} controlId={id}>\r\n        <ControlLabel>{label}</ControlLabel>\r\n        <FormControl {...props} />\r\n        <FormControl.Feedback />\r\n      </FormGroup>\r\n    )\r\n\r\n    onChange = e => {\r\n      let name = e.target.name\r\n      let value = e.target.value\r\n      this.setState(state => ({\r\n        [name]: value\r\n      }))\r\n    }\r\n\r\n    onValidate = e => {\r\n      if (this.state[e] !== '') {\r\n        const validation = this.validator.validate(this.state)\r\n        return validation[e].isInvalid ? 'error' : 'success'\r\n      }\r\n    }\r\n\r\n    onSubmit = _ =>\r\n      this.setState(state => ({ ...propState, show: !state.show }))\r\n\r\n    isValidate = _ =>\r\n      Object.keys(propState).every(\r\n        value => this.onValidate(value) === 'success'\r\n      )\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          <Component\r\n            {...this.state}\r\n            {...this.props}\r\n            FieldGroup={this.FieldGroup}\r\n            onChange={this.onChange}\r\n            onSubmit={this.onSubmit}\r\n            getValidationState={this.onValidate}\r\n            isValidate={this.isValidate}\r\n          />\r\n          <Modal\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}\r\n            show={this.state.show}\r\n            onHide={this.onSubmit}>\r\n            <Modal.Header closeButton />\r\n            <Modal.Body style={{ padding: '0' }}>\r\n              <Alert\r\n                style={{\r\n                  position: 'static',\r\n                  margin: '0'\r\n                }}\r\n                bsStyle=\"success\">\r\n                Your Message Has Been Sent. <strong>Thank you!</strong>\r\n              </Alert>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button bsStyle=\"success\" onClick={this.onSubmit}>\r\n                <strong>OK</strong>\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n  return WithForm\r\n}\r\n\r\nexport default withForm\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default ({...props}) => (\r\n  <Button {...props}>\r\n    {props.children}\r\n  </Button>\r\n)\r\n","import React from 'react';\r\nimport withForm from '../../../components/withForm';\r\nimport Button from '../../../components/Button';\r\n\r\nconst formFields = [\r\n  {\r\n    id: 'name',\r\n    type: 'text',\r\n  },\r\n  {\r\n    id: 'email',\r\n    type: 'email',\r\n  },\r\n  {\r\n    id: 'message',\r\n    type: 'text',\r\n    componentClass: 'textarea'\r\n  },\r\n];\r\n\r\nconst validateRules = [\r\n  {\r\n    field: 'name',\r\n    method: 'isAlpha',\r\n    args: ['tr-TR'],\r\n    validWhen: true,\r\n  },\r\n  {\r\n    field: 'name',\r\n    method: 'isByteLength',\r\n    args: [{min: 2, max: 10}],\r\n    validWhen: true,\r\n  },\r\n  {\r\n    field: 'email',\r\n    method: 'isEmail',\r\n    validWhen: true,\r\n  },\r\n  {\r\n    field: 'message',\r\n    method: 'isByteLength',\r\n    args: [{min: 2, max: 600}],\r\n    validWhen: true,\r\n  }\r\n];\r\n\r\nconst state = {\r\n  name: '',\r\n  email: '',\r\n  message: '',\r\n};\r\n\r\nconst upFirstLetter = string => string.charAt(0).toUpperCase() + string.slice(1);\r\n\r\nconst Form = ({\r\n  FieldGroup,\r\n  onChange,\r\n  getValidationState,\r\n  ...props,\r\n}) => {\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    document.getElementById(\"contact-form\").reset();\r\n    props.onSubmit();\r\n  };\r\n  const isValid = props.isValidate();\r\n  return (\r\n    <form id=\"contact-form\" onChange={onChange} onSubmit={onSubmit}>\r\n      {\r\n        formFields.map((field, i) =>\r\n          <FieldGroup\r\n            key = {i}\r\n            id={field.id}\r\n            type={field.type}\r\n            name={field.id}\r\n            componentClass={field.componentClass}\r\n            placeholder={upFirstLetter(field.id)}\r\n            validationState={getValidationState(field.id)}\r\n          />\r\n        )\r\n      }\r\n      <Button disabled={!isValid} type=\"submit\">SEND</Button>\r\n      <Button type=\"reset\">RESET</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default withForm(state)(validateRules)(Form);\r\n","import React from 'react'\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react'\r\nimport StaticContent from '../../components/StaticContent'\r\nimport ContactIcon from '../../components/ContactIcon'\r\nimport Form from './Form'\r\n\r\nclass Icon {\r\n  constructor(name, text, link, size = '2x') {\r\n    this.name = name\r\n    this.text = text\r\n    this.link = link\r\n    this.size = size\r\n  }\r\n}\r\n\r\nconst links = [\r\n  new Icon('email', 'contact@contact.com', 'mailto:contact@sarpisik.com'),\r\n  new Icon('facebook', 'Facebook Page', 'https://www.facebook.com/'),\r\n  new Icon('youtube', 'Youtube Channel', 'https://www.youtube.com/'),\r\n  new Icon('twitter', 'Twitter Page', 'https://twitter.com/'),\r\n  new Icon('instagram', 'Instagram Blog', 'https://www.instagram.com/')\r\n]\r\n\r\nconst mapStyle = {\r\n  maxWidth: '100%',\r\n  height: '150px',\r\n  position: 'relative',\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto'\r\n}\r\n\r\nconst coordinate = {\r\n  lat: -1.2884,\r\n  lng: 36.8233\r\n}\r\n\r\nconst MapContainer = ({ google }) => (\r\n  <div id=\"map\" style={mapStyle}>\r\n    <Map google={google} zoom={14} initialCenter={coordinate} />\r\n  </div>\r\n)\r\n\r\nconst Contact = ({ google }) => (\r\n  <StaticContent image={3} title=\"CONTACT INFO\">\r\n    <div className=\"contact-page\">\r\n      <Form />\r\n      <div className=\"icon-container\">\r\n        {links.map((icon, i) => (\r\n          <ContactIcon key={i} icon={icon} />\r\n        ))}\r\n      </div>\r\n      <MapContainer google={google} />\r\n      <p>\r\n        <ContactIcon icon={new Icon('phone')} />\r\n        012345568\r\n      </p>\r\n      <p>ADRESS LINE 1</p>\r\n      <p>ADRESS LINE 2</p>\r\n      <p>ADRESS LINE 3</p>\r\n    </div>\r\n  </StaticContent>\r\n)\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyCVQc8DUr717YYLG2lAUP_gv4HaPq_PbkQ'\r\n})(Contact)\r\n"],"sourceRoot":""}